{
  "desc": "",
  "c2s": true,
  "s2c": true,
  "args": [
    {
      "name": "projectileId",
      "desc": "",
      "type": "short"
    },
    {
      "name": "positionX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "positionY",
      "desc": "",
      "type": "float"
    },
    {
      "name": "velocityX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "velocityY",
      "desc": "",
      "type": "float"
    },
    {
      "name": "owner",
      "desc": "Player ID",
      "type": "byte"
    },
    {
      "name": "type",
      "desc": "",
      "type": "short"
    },
    {
      "name": "projFlags",
      "desc": "",
      "type": "BitsByte"
    },
    {
      "name": "AI0",
      "desc": "Only sent if AI[0] flag is true",
      "type": "float"
    },
    {
      "name": "AI1",
      "desc": "Only sent if AI[1] flag is true",
      "type": "float"
    },
    {
      "name": "Damage",
      "desc": "Only sent if Damage flag is true",
      "type": "short"
    },
    {
      "name": "knockback",
      "desc": "Only sent if Knockback flag is true",
      "type": "float"
    },
    {
      "name": "originalDamage",
      "desc": "Only sent if OriginalDamage flag is true",
      "type": "short"
    },
    {
      "name": "projUUID",
      "desc": "Only sent if ProjUUID flag is true",
      "type": "short"
    }
  ],
  "serialization": "writer.Write(projectileId);\nwriter.Write(positionX);\nwriter.Write(positionY);\nwriter.Write(velocityX);\nwriter.Write(velocityY);\nwriter.Write(owner);\nwriter.Write(type);\nprojFlags.OnSerialize(writer);\nif (projFlags[0])\n    writer.Write(AI0);\nif (projFlags[1])\n    writer.Write(AI1);\nif (projFlags[4])\n    writer.Write(Damage);\nif (projFlags[5])\n    writer.Write(knockback);\nif (projFlags[6])\n    writer.Write(originalDamage);\nif (projFlags[7])\n    writer.Write(projUUID);",
  "deserialization": "projectileId = reader.ReadInt16();\npositionX = reader.ReadSingle();\npositionY = reader.ReadSingle();\nvelocityX = reader.ReadSingle();\nvelocityY = reader.ReadSingle();\nowner = reader.ReadByte();\ntype = reader.ReadInt16();\nprojFlags.OnDeserialize(reader);\nif (projFlags[0])\n    AI0 = reader.ReadSingle();\nif (projFlags[1])\n    AI1 = reader.ReadSingle();\nif (projFlags[4])\n    Damage = reader.ReadInt16();\nif (projFlags[5])\n    knockback = reader.ReadSingle();\nif (projFlags[6])\n    originalDamage = reader.ReadInt16();\nif (projFlags[7])\n    projUUID = reader.ReadInt16();"
}
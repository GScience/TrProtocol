{
  "desc": "",
  "c2s": true,
  "s2c": true,
  "args": [
    {
      "name": "playerId",
      "desc": "Remote player ID",
      "type": "byte"
    },
    {
      "name": "control",
      "desc": "",
      "type": "byte"
    },
    {
      "name": "pulley",
      "desc": "",
      "type": "byte"
    },
    {
      "name": "misc",
      "desc": "",
      "type": "byte"
    },
    {
      "name": "sleepingInfo",
      "desc": "",
      "type": "byte"
    },
    {
      "name": "selectedItem",
      "desc": "",
      "type": "byte"
    },
    {
      "name": "positionX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "positionY",
      "desc": "",
      "type": "float"
    },
    {
      "name": "velocityX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "velocityY",
      "desc": "",
      "type": "float"
    },
    {
      "name": "originalPositionX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "originalPositionY",
      "desc": "",
      "type": "float"
    },
    {
      "name": "homePositionX",
      "desc": "",
      "type": "float"
    },
    {
      "name": "homePositionY",
      "desc": "",
      "type": "float"
    }
  ],
  "serialization": "writer.Write(playerId);\nwriter.Write(control);\nwriter.Write(pulley);\nwriter.Write(misc);\nwriter.Write(sleepingInfo);\nwriter.Write(selectedItem);\nwriter.Write(positionX);\nwriter.Write(positionY);\n\nif (((uint)pulley & (1 << 2)) > 0U)\n{\n    writer.Write(velocityX);\n    writer.Write(velocityY);\n}\n\nif (((uint)misc & (1 << 6)) > 0U)\n{\n    writer.Write(originalPositionX);\n    writer.Write(originalPositionY);\n    writer.Write(homePositionX);\n    writer.Write(homePositionY);\n}",
  "deserialization": "playerId = reader.ReadByte();\ncontrol = reader.ReadByte();\npulley = reader.ReadByte();\nmisc = reader.ReadByte();\nsleepingInfo = reader.ReadByte();\nselectedItem = reader.ReadByte();\npositionX = reader.ReadSingle();\npositionY = reader.ReadSingle();\n\nif (((uint)pulley & (1 << 2)) > 0U)\n{\n    velocityX = reader.ReadSingle();\n    velocityY = reader.ReadSingle();\n}\n\nif (((uint)misc & (1 << 6)) > 0U)\n{\n    originalPositionX = reader.ReadSingle();\n    originalPositionY = reader.ReadSingle();\n    homePositionX = reader.ReadSingle();\n    homePositionY = reader.ReadSingle();\n}"
}